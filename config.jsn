import "../pmtech/tools/pmbuild_ext/pmbuild_init.jsn"
{
    jsn_vars: {
        pmbuild_dir: "../pmtech/third_party/pmbuild"
        pmtech_dir: "../pmtech"
    }
	
	base:
	{
		jsn_vars: {
            data_dir: ""
            build_dir: ""
            bin_dir: ""
        }
        
        clean: {
            directories: [
                "${data_dir}"
                "${build_dir}"
                "${bin_dir}"
                "temp"
            ]
        }
        
        render_configs: {
            type: jsn
            args: [
                "-i %{input_file} -o %{output_file}"
                "-I ../assets/configs assets/configs",
            ]
            files: [
                ["${pmtech_dir}/assets/configs", "${data_dir}/configs"]
            ]
            dependencies: true
        }
		
		texturec: {
            args: [
                "-f %{input_file}"
                "%{export_args}"
                "-o %{output_file}"
            ]
            files: [
                ["${pmtech_dir}/assets/textures", "${data_dir}/textures"]
                ["assets/exported/textures", "${data_dir}/textures"]
            ]
            excludes: [
                "export.jsn"
                "*.txt"
                "*.DS_Store"
                "*.dds"
                "*.pmv"
            ]
            change_ext: ".dds"
            dependencies: true
        }
        
        models: {
            files: [
                ["assets/exported/models", "${data_dir}/models"]
            ]
        }
		
		base_copy: {
            type: copy
            files: [
                ["${pmtech_dir}/assets/fonts", "${data_dir}/fonts"]
                ["${pmtech_dir}/assets/textures/**/*.dds", "${data_dir}/textures"]
            ]
        }
		
		pmbuild_config: {
            pmbuild_cmd: "${pmbuild_dir}/pmbuild"
            destination: "${data_dir}"
        }
        
	}
	
	//
    // win32
    //
	
    win32(base):
    {
        jsn_vars: {
            data_dir: "bin/win32/data"
            build_dir: "build/win32"
            bin_dir: "bin/win32"
        }
                
        shared_libs: {
            type: copy
            files: [
                ["${pmtech_dir}/third_party/shared_libs/win32", "bin/win32"]
            ]
        }
        
        premake: {
            args: [
                "%{vs_latest}"
                "--renderer=dx11"
                "--platform_dir=win32"
				"--pmtech_dir=${pmtech_dir}/"
                "--sdk_version=%{windows_sdk_version}"
            ]
        },
        
        pmfx: {
            args: [
                "-v1"
                "-shader_platform hlsl"
                "-shader_version 5_0"
                "-i ${pmtech_dir}/assets/shaders"
                "-o bin/win32/data/pmfx/hlsl"
                "-h shader_structs"
                "-t temp/shaders"
                "-source"
            ]
        }
        
        make: {
            toolchain: "msbuild"
            files: [
                "build/win32/*.vcxproj"
            ]
        }
        
        launch: {
            cmd: "%{target_path}"
            files: [
                "bin/win32/*.exe"
            ]
        }
		
		vscode: {
            files: [
                "build/win32/*.vcxproj"
            ]
            folders: [
                "."
                ".."
            ]
            configurations:[
                {
                    name: "debug"
                    make: "../pmbuild make win32 %{target_name} /p:Configuration=Debug /p:Platform=x64"
                    launch: "bin/win32/%{target_name}_d.exe"
                }
                {
                    name: "release"
                    make: "../pmbuild make win32 %{target_name} /p:Configuration=Release /p:Platform=x64"
                    launch: "bin/win32/%{target_name}.exe"
                }
            ]
            cwd: "bin/win32"
            debugger: "vscode"
            change_ext: ""
        }
        
		libs: {
            type: shell
            explicit: true
            commands: [
                "cd ${pmtech_dir}\\third_party && ..\\pmbuild bullet-win32"
                "cd ${pmtech_dir}\\third_party && ..\\pmbuild make bullet-win32 all /p:Platform=x64 /p:Configuration=Debug"
                "cd ${pmtech_dir}\\third_party && ..\\pmbuild make bullet-win32 all /p:Platform=x64 /p:Configuration=Release"
				"cd ${pmtech_dir}\\tools && ..\\pmbuild win32"
				"cd ${pmtech_dir}\\tools && ..\\pmbuild make win32 mesh_opt /p:Platform=x64 /p:Configuration=Release"
            ]
        }
    }
    
	//
    // mac
    //
	
    mac(base):
    {
        jsn_vars: {
            data_dir: "bin/osx/data"
            build_dir: "build/osx"
            bin_dir: "bin/osx"
        }
                
        shared_libs: {
            type: copy
            files: [
                ["${pmtech_dir}/third_party/shared_libs/osx", "bin/osx"]
            ]
        }
        
        premake: {
            args: [
                "xcode4"
                "--renderer=metal"
                "--platform_dir=osx"
				"--pmtech_dir=${pmtech_dir}/"
            ]
        },
        
        pmfx: {
            args: [
                "-v1"
                "-shader_platform metal"
                "-i ${pmtech_dir}/assets/shaders"
                "-o bin/osx/data/pmfx/metal"
                "-h shader_structs"
                "-t temp/shaders"
                "-source"
            ]
        }

        make: {
            toolchain: "xcodebuild"
            workspace: "dr_scientist_osx.xcworkspace"
            files: [
                "build/osx/**/*.xcodeproj"
            ]
            change_ext: ""
        }

        launch: {
            cmd: "%{target_path}/Contents/MacOS/%{target_name}"
            files: [
                "bin/osx/**/*.app"
            ]
        }
                
		libs: {
            type: shell
            explicit: true
            commands: [
                "cd ${pmtech_dir}/third_party && ../pmbuild bullet-mac"
                "cd ${pmtech_dir}/third_party && ../pmbuild make bullet-mac all -configuration Release -quiet"
                "cd ${pmtech_dir}/third_party && ../pmbuild make bullet-mac all -configuration Debug -quiet"
            ]
        }
    }

    //
    // linux
    //

    linux(base): 
    {
        jsn_vars: {
            data_dir: "bin/linux/data"
            bin_dir: "bin/linux"
            build_dir: "build/linux"
            platform: "linux"
        }
        
        premake: {
            args: [
                "gmake"
                "--renderer=opengl"
                "--platform_dir=linux"
                "--pmtech_dir=${pmtech_dir}/"
            ]
        }
        
        pmfx: {
            args: [
                "-v1"
                "-shader_platform glsl"
                "-shader_version 450"
                "-i ${pmtech_dir}/assets/shaders"
                "-o bin/linux/data/pmfx/glsl"
                "-h shader_structs"
                "-t temp/shaders"
                "-source"
            ]
        }

        make: {
            toolchain: "make",
            files: [
                "build/linux/*.make"
            ]
            change_ext: ""
        }

        launch: {
            cmd: "./%{target_path}"
            files: [
                "bin/linux"
            ]
        }

        vscode: {
            files: [
                "build/linux/*.make"
            ]
            folders: [
                "."
                ".."
            ]
            configurations:[
                {
                    name: "debug"
                    make: "../pmtech/pmbuild make linux %{target_name} config=debug"
                    launch: "bin/linux/%{target_name}_d"
                }
                {
                    name: "release"
                    make: "../pmtech/pmbuild make linux %{target_name} config=release"
                    launch: "bin/linux/%{target_name}"
                }
            ]
            cwd: "bin/linux"
            debugger: "gdb"
            change_ext: ""
        }

        libs: {
            type: shell
            explicit: true
            commands: [
                "cd ${pmtech_dir}/third_party && ../pmbuild bullet-linux"
                "cd ${pmtech_dir}/third_party && ../pmbuild make bullet-linux all config=release"
                "cd ${pmtech_dir}/third_party && ../pmbuild make bullet-linux all config=debug"
            ]
        }
    }
}
